program: src/main.py
method: bayes
metric:
  name: avg_acc
  goal: maximize

parameters:
  dataset:
    value: mnist
  scenario:
    value: class_inc
  model:
    value: mlp
  method:
    value: composer_lwf
  exp.seed: 
    value: 42      
  exp.batch_size:
    value: 64      
  exp.epochs: 
    values: [50, 10, 5, 1]
  exp.gen_cm: 
    value: False
  exp.detect_anomaly:
    value: False
  fabric.accelerator:
    value: gpu       

  # Model configuration
  model._target_: 
    value: model.MLP
  model.initial_out_features:
    value: 2          
  model.sizes:
    value: [1024, 400, 400]
  model.head_type: 
    value: Normal
  model.layer_types: 
    value: ["Normal", "Normal"]
  model.activation: 
    _target_: torch.nn.Tanh        

  # Method configuration
  method._partial_: 
    value: True
  method._target_: 
    value: method.Composer
  method.criterion._target_: 
    value: torch.nn.CrossEntropyLoss
  method.first_lr: 
    distribution: log_uniform_values
    min: 0.0001
    max: 0.01
  method.lr: 
    distribution: log_uniform_values 
    min: 0.0001
    max: 0.01
  method.plugin.T: 
    distribution: uniform      
    min: 0.5
    max: 2
  method.plugin.alpha: 
    distribution: uniform      
    min: 0.4
    max: 1.0
  method.gamma: 
    distribution: uniform  
    min: 0.0
    max: 1.0
  method.clipgrad: 
    value: 0.001
  method.reg_type:
    values: ["entropy", "l1", "l0"]
  method.plugins:
    - _target_: method.LwF
      T: 2
      alpha: 0.4


command:
  - ${env}
  - python
  - ${program}
  - --config-name
  - lwf_split_mnist_mlp.yaml
  - ${args_no_hyphens}