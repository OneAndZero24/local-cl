program: src/main.py
method: bayes
metric:
  name: avg_acc
  goal: maximize

parameters:
  dataset:
    value: imagenet10
  scenario:
    value: class_inc
  model:
    value: vit
  method:
    value: composer_lwf
  exp.seed: 
    value: 42      
  exp.batch_size:
    values: [128,64,32]      
  exp.epochs: 
    values: [5,10]
  exp.gen_cm: 
    value: False
  exp.detect_anomaly:
    value: False
  fabric.accelerator:
    value: gpu   
  exp.log_per_batch:
    value: False
  exp.cleanup:
    value: True
  exp.dil:
    value: False

  # Scenario configuration
  scenario._partial_:
    value: True
  scenario._target_:
    value: continuum.ClassIncremental
  scenario.increment:
    value: 2

  # Model configuration
  model._target_:
    value: model.BigModel
  model.pretrained_backbone_name:
    value: "vit_b_16"
  model.frozen:
    value: True
  model.add_interval_activation_after_backbone:
    value: False
  model.head._target_:
    value: model.MLP
  model.head.initial_out_features:
    value: 2
  model.head.sizes:
    value: [768, 400]
  model.head.layers:
    value: ["Normal"]
  model.head.head_type:
    value: Normal
  model.head.activation:
    value: torch.nn.ReLU

  # Method configuration
  method._partial_: 
    value: True
  method.use_dynamic_alpha: 
    value: False
  method._target_: 
    value: method.Composer
  method.criterion: 
    value: CrossEntropyLoss
  method.criterion_scale:
    distribution: uniform
    min: 0.00000001
    max: 1.0
  method.lr: 
    distribution: log_uniform_values 
    min: 0.0001
    max: 0.01
  method.ema_scale:
    value: 0.95
  method.plugins.0._target_:
    value: method.LwF
  method.plugins.0.T:
    distribution: uniform      
    min: 0.5
    max: 4.0
  method.plugins.0.alpha:
    distribution: uniform      
    min: 0.1
    max: 0.9


command:
  - ${env}
  - python
  - ${program}
  - --config-name
  - activation_visualization.yaml
  - ${args_no_hyphens}